<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="0" total="10" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-04T11:48:56 EDT" name="Suite" finished-at="2025-08-04T11:51:09 EDT" duration-ms="132406">
    <groups>
      <group name="group2">
        <method signature="LoginpageTestClass.verifyCorrectApplicationisLaunchingWhileHitingURL()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" name="verifyCorrectApplicationisLaunchingWhileHitingURL" class="testClasses.LoginpageTestClass"/>
        <method signature="LoginpageTestClass.verifyRemembermeCheckBoxisUncheckedByDefault()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" name="verifyRemembermeCheckBoxisUncheckedByDefault" class="testClasses.LoginpageTestClass"/>
      </group> <!-- group2 -->
      <group name="group1">
        <method signature="HomepageTestClass.verifyTooltipOfCalculatorIcon()[pri:0, instance:testClasses.HomepageTestClass@16612a51]" name="verifyTooltipOfCalculatorIcon" class="testClasses.HomepageTestClass"/>
        <method signature="LoginpageTestClass.verifySuccessfullLogin()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" name="verifySuccessfullLogin" class="testClasses.LoginpageTestClass"/>
        <method signature="LoginpageTestClass.verifyUnsuccessfullLogin(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" name="verifyUnsuccessfullLogin" class="testClasses.LoginpageTestClass"/>
      </group> <!-- group1 -->
    </groups>
    <test started-at="2025-08-04T11:48:56 EDT" name="Test1" finished-at="2025-08-04T11:51:09 EDT" duration-ms="132406">
      <class name="testClasses.HomepageTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.HomepageTestClass@16612a51]" started-at="2025-08-04T11:50:52 EDT" name="beforeMethod" finished-at="2025-08-04T11:51:04 EDT" duration-ms="11938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTooltipOfCalculatorIcon()[pri:0, instance:testClasses.HomepageTestClass@16612a51]" started-at="2025-08-04T11:51:04 EDT" name="verifyTooltipOfCalculatorIcon" finished-at="2025-08-04T11:51:08 EDT" duration-ms="4637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTooltipOfCalculatorIcon -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.HomepageTestClass@16612a51]" started-at="2025-08-04T11:51:08 EDT" name="afterMethod" finished-at="2025-08-04T11:51:09 EDT" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.HomepageTestClass -->
      <class name="testClasses.LoginpageTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:48:56 EDT" name="beforeMethod" finished-at="2025-08-04T11:49:08 EDT" duration-ms="12123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCorrectApplicationisLaunchingWhileHitingURL()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:08 EDT" name="verifyCorrectApplicationisLaunchingWhileHitingURL" finished-at="2025-08-04T11:49:08 EDT" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCorrectApplicationisLaunchingWhileHitingURL -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:08 EDT" name="afterMethod" finished-at="2025-08-04T11:49:08 EDT" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:08 EDT" name="beforeMethod" finished-at="2025-08-04T11:49:12 EDT" duration-ms="3843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyRemembermeCheckBoxisUncheckedByDefault()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:12 EDT" name="verifyRemembermeCheckBoxisUncheckedByDefault" finished-at="2025-08-04T11:49:12 EDT" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRemembermeCheckBoxisUncheckedByDefault -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:12 EDT" name="afterMethod" finished-at="2025-08-04T11:49:12 EDT" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:12 EDT" name="beforeMethod" finished-at="2025-08-04T11:49:25 EDT" duration-ms="12901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResetPasswordPageisComingWhileClickingonForgetyourPassword()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:25 EDT" name="verifyResetPasswordPageisComingWhileClickingonForgetyourPassword" finished-at="2025-08-04T11:49:26 EDT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetPasswordPageisComingWhileClickingonForgetyourPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:26 EDT" name="afterMethod" finished-at="2025-08-04T11:49:26 EDT" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:26 EDT" name="beforeMethod" finished-at="2025-08-04T11:49:39 EDT" duration-ms="13496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifySuccessfullLogin()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:39 EDT" name="verifySuccessfullLogin" finished-at="2025-08-04T11:49:44 EDT" duration-ms="4642" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testClasses.LoginpageTestClass.verifySuccessfullLogin(LoginpageTestClass.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:44 EDT" name="afterMethod" finished-at="2025-08-04T11:49:44 EDT" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:44 EDT" name="beforeMethod" finished-at="2025-08-04T11:49:57 EDT" duration-ms="12886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifySuccessfullLogin()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:49:57 EDT" name="verifySuccessfullLogin" finished-at="2025-08-04T11:50:01 EDT" duration-ms="4128" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testClasses.LoginpageTestClass.verifySuccessfullLogin(LoginpageTestClass.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:01 EDT" name="afterMethod" finished-at="2025-08-04T11:50:01 EDT" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:01 EDT" name="beforeMethod" finished-at="2025-08-04T11:50:13 EDT" duration-ms="11901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifySuccessfullLogin()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:13 EDT" name="verifySuccessfullLogin" finished-at="2025-08-04T11:50:17 EDT" duration-ms="4291" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testClasses.LoginpageTestClass.verifySuccessfullLogin(LoginpageTestClass.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:17 EDT" name="afterMethod" finished-at="2025-08-04T11:50:17 EDT" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:17 EDT" name="beforeMethod" finished-at="2025-08-04T11:50:21 EDT" duration-ms="3788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:21 EDT" name="verifySuccessfullLogin" finished-at="2025-08-04T11:50:26 EDT" duration-ms="4611" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testClasses.LoginpageTestClass.verifySuccessfullLogin(LoginpageTestClass.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:26 EDT" name="afterMethod" finished-at="2025-08-04T11:50:26 EDT" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:26 EDT" name="beforeMethod" finished-at="2025-08-04T11:50:38 EDT" duration-ms="11909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfullLogin(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:38 EDT" name="verifyUnsuccessfullLogin" data-provider="unsuccessfullLogin" finished-at="2025-08-04T11:50:39 EDT" duration-ms="814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[asd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:39 EDT" name="afterMethod" finished-at="2025-08-04T11:50:39 EDT" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:39 EDT" name="beforeMethod" finished-at="2025-08-04T11:50:52 EDT" duration-ms="12847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUsernameTextboxShowingHintorNot()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:52 EDT" name="verifyUsernameTextboxShowingHintorNot" finished-at="2025-08-04T11:50:52 EDT" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsernameTextboxShowingHintorNot -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginpageTestClass@49b2a47d]" started-at="2025-08-04T11:50:52 EDT" name="afterMethod" finished-at="2025-08-04T11:50:52 EDT" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.LoginpageTestClass -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
